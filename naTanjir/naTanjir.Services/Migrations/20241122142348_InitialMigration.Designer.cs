// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using naTanjir.Services.Database;

#nullable disable

namespace naTanjir.Services.Migrations
{
    [DbContext(typeof(NaTanjirContext))]
    [Migration("20241122142348_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("naTanjir.Services.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RestoranId")
                        .HasColumnType("int")
                        .HasColumnName("RestoranID");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnic__80B06D6177EE62B8");

                    b.HasIndex("RestoranId");

                    b.ToTable("Korisnici", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikUlogaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("UlogaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnic__1608720E8E1E1CAC");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.Lokacija", b =>
                {
                    b.Property<int>("LokacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LokacijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LokacijaId"));

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("GeografskaDuzina")
                        .HasColumnType("decimal(18, 16)");

                    b.Property<decimal?>("GeografskaSirina")
                        .HasColumnType("decimal(18, 16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("LokacijaId")
                        .HasName("PK__Lokacija__49DE2C2AF537B551");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Lokacija", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaId"));

                    b.Property<int>("BrojNarudzbe")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int?>("DostavljacId")
                        .HasColumnType("int")
                        .HasColumnName("DostavljacID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("UkupnaCijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("NarudzbaId")
                        .HasName("PK__Narudzba__FBEC1357883C3095");

                    b.HasIndex("DostavljacId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Narudzba", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.OcjenaProizvod", b =>
                {
                    b.Property<int>("OcjenaProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OcjenaProizvodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaProizvodId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<decimal>("Ocjena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("OcjenaProizvodId")
                        .HasName("PK__OcjenaPr__B0C8530F9F9D1878");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("OcjenaProizvod", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.OcjenaRestoran", b =>
                {
                    b.Property<int>("OcjenaRestoranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OcjenaRestoranID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaRestoranId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<decimal>("Ocjena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RestoranId")
                        .HasColumnType("int")
                        .HasColumnName("RestoranID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("OcjenaRestoranId")
                        .HasName("PK__OcjenaRe__993C51F773C6400A");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RestoranId");

                    b.ToTable("OcjenaRestoran", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.Proizvod", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProizvodId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Opis")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("RestoranId")
                        .HasColumnType("int")
                        .HasColumnName("RestoranID");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.Property<int>("VrstaProizvodaId")
                        .HasColumnType("int")
                        .HasColumnName("VrstaProizvodaID");

                    b.HasKey("ProizvodId")
                        .HasName("PK__Proizvod__21A8BE181053462D");

                    b.HasIndex("RestoranId");

                    b.HasIndex("VrstaProizvodaId");

                    b.ToTable("Proizvod", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.Restoran", b =>
                {
                    b.Property<int>("RestoranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RestoranID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestoranId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RadnoVrijemeDo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RadnoVrijemeOd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("VlasnikId")
                        .HasColumnType("int")
                        .HasColumnName("VlasnikID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.Property<int>("VrstaRestoranaId")
                        .HasColumnType("int")
                        .HasColumnName("VrstaRestoranaID");

                    b.HasKey("RestoranId")
                        .HasName("PK__Restoran__259AB1A74431504F");

                    b.HasIndex("VlasnikId");

                    b.HasIndex("VrstaRestoranaId");

                    b.ToTable("Restoran", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.RestoranFavorit", b =>
                {
                    b.Property<int>("RestoranFavoritId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RestoranFavoritID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestoranFavoritId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("RestoranId")
                        .HasColumnType("int")
                        .HasColumnName("RestoranID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("RestoranFavoritId")
                        .HasName("PK__Restoran__2953C4B456B4BC39");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RestoranId");

                    b.ToTable("RestoranFavorit", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.StavkeNarudzbe", b =>
                {
                    b.Property<int>("StavkeNarudzbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StavkeNarudzbeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkeNarudzbeId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbaId")
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.Property<int>("RestoranId")
                        .HasColumnType("int")
                        .HasColumnName("RestoranID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("StavkeNarudzbeId")
                        .HasName("PK__StavkeNa__FA672E98C956CF71");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.HasIndex("RestoranId");

                    b.ToTable("StavkeNarudzbe", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UlogaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloge__DCAB23EB1F3E7E4E");

                    b.ToTable("Uloge", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.VrstaProizvodum", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VrstaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("VrstaId")
                        .HasName("PK__VrstaPro__42CB8F0F6A7204B9");

                    b.ToTable("VrstaProizvoda");
                });

            modelBuilder.Entity("naTanjir.Services.Database.VrstaRestorana", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VrstaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("date");

                    b.HasKey("VrstaId")
                        .HasName("PK__VrstaRes__42CB8F0FBB2B54F9");

                    b.ToTable("VrstaRestorana", (string)null);
                });

            modelBuilder.Entity("naTanjir.Services.Database.Korisnici", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Restoran", "Restoran")
                        .WithMany("Korisnicis")
                        .HasForeignKey("RestoranId")
                        .HasConstraintName("FKKorisnici730368");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("naTanjir.Services.Database.KorisniciUloge", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKKorisniciU569655");

                    b.HasOne("naTanjir.Services.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FKKorisniciU863332");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Lokacija", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Lokacijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FKLokacija556795");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Narudzba", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Dostavljac")
                        .WithMany("NarudzbaDostavljacs")
                        .HasForeignKey("DostavljacId")
                        .HasConstraintName("FKNarudzba82867");

                    b.HasOne("naTanjir.Services.Database.Korisnici", "Korisnik")
                        .WithMany("NarudzbaKorisniks")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKNarudzba980749");

                    b.Navigation("Dostavljac");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("naTanjir.Services.Database.OcjenaProizvod", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Korisnik")
                        .WithMany("OcjenaProizvods")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKOcjenaProi212843");

                    b.HasOne("naTanjir.Services.Database.Proizvod", "Proizvod")
                        .WithMany("OcjenaProizvods")
                        .HasForeignKey("ProizvodId")
                        .IsRequired()
                        .HasConstraintName("FKOcjenaProi294356");

                    b.Navigation("Korisnik");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("naTanjir.Services.Database.OcjenaRestoran", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Korisnik")
                        .WithMany("OcjenaRestorans")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKOcjenaRest861405");

                    b.HasOne("naTanjir.Services.Database.Restoran", "Restoran")
                        .WithMany("OcjenaRestorans")
                        .HasForeignKey("RestoranId")
                        .IsRequired()
                        .HasConstraintName("FKOcjenaRest897301");

                    b.Navigation("Korisnik");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Proizvod", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Restoran", "Restoran")
                        .WithMany("Proizvods")
                        .HasForeignKey("RestoranId")
                        .IsRequired()
                        .HasConstraintName("FKProizvod765485");

                    b.HasOne("naTanjir.Services.Database.VrstaProizvodum", "VrstaProizvoda")
                        .WithMany("Proizvods")
                        .HasForeignKey("VrstaProizvodaId")
                        .IsRequired()
                        .HasConstraintName("FKProizvod214927");

                    b.Navigation("Restoran");

                    b.Navigation("VrstaProizvoda");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Restoran", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Vlasnik")
                        .WithMany("Restorans")
                        .HasForeignKey("VlasnikId")
                        .IsRequired()
                        .HasConstraintName("FKRestoran332334");

                    b.HasOne("naTanjir.Services.Database.VrstaRestorana", "VrstaRestorana")
                        .WithMany("Restorans")
                        .HasForeignKey("VrstaRestoranaId")
                        .IsRequired()
                        .HasConstraintName("FKRestoran645673");

                    b.Navigation("Vlasnik");

                    b.Navigation("VrstaRestorana");
                });

            modelBuilder.Entity("naTanjir.Services.Database.RestoranFavorit", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Korisnici", "Korisnik")
                        .WithMany("RestoranFavorits")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKRestoranFa643757");

                    b.HasOne("naTanjir.Services.Database.Restoran", "Restoran")
                        .WithMany("RestoranFavorits")
                        .HasForeignKey("RestoranId")
                        .IsRequired()
                        .HasConstraintName("FKRestoranFa114950");

                    b.Navigation("Korisnik");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("naTanjir.Services.Database.StavkeNarudzbe", b =>
                {
                    b.HasOne("naTanjir.Services.Database.Narudzba", "Narudzba")
                        .WithMany("StavkeNarudzbes")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FKStavkeNaru240217");

                    b.HasOne("naTanjir.Services.Database.Proizvod", "Proizvod")
                        .WithMany("StavkeNarudzbes")
                        .HasForeignKey("ProizvodId")
                        .IsRequired()
                        .HasConstraintName("FKStavkeNaru313239");

                    b.HasOne("naTanjir.Services.Database.Restoran", "Restoran")
                        .WithMany("StavkeNarudzbes")
                        .HasForeignKey("RestoranId")
                        .IsRequired()
                        .HasConstraintName("FKStavkeNaru909859");

                    b.Navigation("Narudzba");

                    b.Navigation("Proizvod");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Korisnici", b =>
                {
                    b.Navigation("KorisniciUloges");

                    b.Navigation("Lokacijas");

                    b.Navigation("NarudzbaDostavljacs");

                    b.Navigation("NarudzbaKorisniks");

                    b.Navigation("OcjenaProizvods");

                    b.Navigation("OcjenaRestorans");

                    b.Navigation("RestoranFavorits");

                    b.Navigation("Restorans");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Narudzba", b =>
                {
                    b.Navigation("StavkeNarudzbes");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Proizvod", b =>
                {
                    b.Navigation("OcjenaProizvods");

                    b.Navigation("StavkeNarudzbes");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Restoran", b =>
                {
                    b.Navigation("Korisnicis");

                    b.Navigation("OcjenaRestorans");

                    b.Navigation("Proizvods");

                    b.Navigation("RestoranFavorits");

                    b.Navigation("StavkeNarudzbes");
                });

            modelBuilder.Entity("naTanjir.Services.Database.Uloge", b =>
                {
                    b.Navigation("KorisniciUloges");
                });

            modelBuilder.Entity("naTanjir.Services.Database.VrstaProizvodum", b =>
                {
                    b.Navigation("Proizvods");
                });

            modelBuilder.Entity("naTanjir.Services.Database.VrstaRestorana", b =>
                {
                    b.Navigation("Restorans");
                });
#pragma warning restore 612, 618
        }
    }
}
